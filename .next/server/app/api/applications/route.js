(()=>{var e={};e.id=179,e.ids=[179],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},11997:e=>{"use strict";e.exports=require("punycode")},27910:e=>{"use strict";e.exports=require("stream")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},34631:e=>{"use strict";e.exports=require("tls")},39727:()=>{},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},47990:()=>{},48479:(e,r,o)=>{"use strict";o.r(r),o.d(r,{patchFetch:()=>x,routeModule:()=>f,serverHooks:()=>j,workAsyncStorage:()=>m,workUnitAsyncStorage:()=>y});var t={};o.r(t),o.d(t,{GET:()=>u,POST:()=>d,PUT:()=>g});var s=o(96559),i=o(48088),a=o(37719),n=o(32190),p=o(61223),l=o(44999);let c=async(e,r)=>{try{console.log(`🔔 Checking if first application prompt needed for job ${e}`);let{data:o,error:t}=await supabase.from("jobs").select("is_free_job, title, employer_id").eq("id",e).single();if(t||!o)return void console.error("Error fetching job for prompt:",t);if(!o.is_free_job)return void console.log("Job is not a free job, skipping prompt");let{data:s,error:i}=await supabase.from("applications").select("id").eq("job_id",e);if(i)return void console.error("Error checking existing applications:",i);let a=s?.length||0;if(console.log(`📊 Application count for job ${e}: ${a}`),1===a){let{data:o,error:t}=await supabase.from("upgrade_prompts").select("id").eq("job_id",e).eq("prompt_type","first_application").single();if(t&&"PGRST116"!==t.code)return void console.error("Error checking existing prompt:",t);if(!o){let{error:o}=await supabase.from("upgrade_prompts").insert({user_id:r,job_id:e,prompt_type:"first_application",triggered_at:new Date().toISOString()});o?console.error("Error creating upgrade prompt:",o):console.log(`✅ Created first application prompt for job ${e}`)}}}catch(e){console.error("Error in triggerFirstApplicationPrompt:",e)}};async function u(e){try{console.log("\uD83D\uDD0D Applications API called");let{searchParams:r}=new URL(e.url),o=r.get("userId"),t=r.get("employerId");console.log("\uD83D\uDCCB Parameters:",{userId:o,employerId:t});let s=(0,l.UL)(),i=(0,p.createRouteHandlerClient)({cookies:()=>s});if(!o&&!t)return n.NextResponse.json({error:"User ID or Employer ID required"},{status:400});let a=[];if(o){console.log("\uD83D\uDC64 Fetching applications for job seeker:",o);let{data:e,error:r}=await i.from("applications").select(`
          *,
          jobs!inner(id, title, company, employer_id, status)
        `).eq("applicant_id",o).order("applied_at",{ascending:!1});if(r)return console.error("❌ Error fetching user applications:",r),n.NextResponse.json({error:"Failed to fetch user applications",details:r.message},{status:500});a=e||[],console.log("\uD83D\uDCCA Found",a.length,"applications for user")}else if(t){console.log("\uD83C\uDFE2 Fetching applications for employer:",t);let{data:e,error:r}=await i.from("applications").select(`
          *,
          jobs!inner(id, title, company, employer_id, status)
        `).eq("jobs.employer_id",t).order("applied_at",{ascending:!1});if(r)return console.error("❌ Error fetching employer applications:",r),n.NextResponse.json({error:"Failed to fetch employer applications",details:r.message},{status:500});a=e||[],console.log("\uD83D\uDCCA Found",a.length,"applications for employer")}return console.log("✅ Applications fetched successfully"),n.NextResponse.json({success:!0,applications:a,count:a.length})}catch(e){return console.error("\uD83D\uDCA5 Unexpected error in applications API:",e),n.NextResponse.json({error:"Internal server error",details:e.message,stack:void 0},{status:500})}}async function d(e){try{console.log("\uD83D\uDCDD Creating new application");let{jobId:r,userId:o,firstName:t,lastName:s,email:i,phone:a,classification:u}=await e.json(),d=(0,l.UL)(),g=(0,p.createRouteHandlerClient)({cookies:()=>d});if(!r||!o||!t||!s||!i||!a)return n.NextResponse.json({error:"Missing required fields"},{status:400});let{data:f,error:m}=await g.from("applications").select("id").eq("job_id",r).eq("applicant_id",o).single();if(m&&"PGRST116"!==m.code)return console.error("Error checking existing application:",m),n.NextResponse.json({error:"Database error while checking application"},{status:500});if(f)return n.NextResponse.json({error:"You have already applied to this job"},{status:409});let{data:y,error:j}=await g.from("jobs").select("id, title, company, employer_id, is_free_job").eq("id",r).single();if(j)return console.error("Error fetching job:",j),n.NextResponse.json({error:"Job not found"},{status:404});let x={job_id:r,applicant_id:o,first_name:t,last_name:s,email:i,phone:a,classification:u||"",status:"pending",applied_at:new Date().toISOString(),created_at:new Date().toISOString()},{data:_,error:b}=await g.from("applications").insert(x).select().single();if(b)return console.error("Error creating application:",b),n.NextResponse.json({error:"Failed to submit application",details:b.message},{status:500});return console.log("✅ Application created successfully"),y.is_free_job&&y.employer_id&&await c(r,y.employer_id),n.NextResponse.json({success:!0,message:"Application submitted successfully",application:{id:_.id,job_title:y.title,company:y.company,applied_at:_.applied_at}})}catch(e){return console.error("Error submitting application:",e),n.NextResponse.json({error:"Internal server error"},{status:500})}}async function g(e){try{console.log("\uD83D\uDD04 Updating application status");let{applicationId:r,status:o,userId:t}=await e.json();console.log("\uD83D\uDCE5 Request body:",{applicationId:r,status:o,userId:t});let s=(0,l.UL)(),i=(0,p.createRouteHandlerClient)({cookies:()=>s});if(!r||!o||!t)return console.error("❌ Missing required fields:",{applicationId:r,status:o,userId:t}),n.NextResponse.json({error:"Missing required fields: applicationId, status, userId"},{status:400});console.log("\uD83D\uDD0D Looking for application:",r,"for user:",t);let{data:a,error:c}=await i.from("applications").select("*").eq("id",r).single();if(c)return console.error("❌ Error fetching application:",c),n.NextResponse.json({error:"Application not found: "+c.message},{status:404});if(!a)return console.error("❌ Application not found"),n.NextResponse.json({error:"Application not found"},{status:404});console.log("✅ Found application:",a.id,"for job:",a.job_id);let{data:u,error:d}=await i.from("jobs").select("employer_id").eq("id",a.job_id).single();if(d||!u)return console.error("❌ Error fetching job:",d),n.NextResponse.json({error:"Job not found for this application"},{status:404});if(console.log("✅ Found job with employer:",u.employer_id,"requesting user:",t),console.log("\uD83D\uDD0D Employer ID type:",typeof u.employer_id,"User ID type:",typeof t),console.log("\uD83D\uDD0D Employer ID === User ID:",u.employer_id===t),console.log("\uD83D\uDD0D Employer ID == User ID:",u.employer_id==t),u.employer_id!==t&&u.employer_id!==String(t))return console.error("❌ Unauthorized: User",t,"is not employer",u.employer_id),n.NextResponse.json({error:"Unauthorized: You can only update applications for your jobs"},{status:403});let{data:g,error:f}=await i.from("applications").update({status:o,updated_at:new Date().toISOString()}).eq("id",r).select().single();if(f)return console.error("Error updating application status:",f),n.NextResponse.json({error:"Failed to update application status"},{status:500});return console.log("✅ Application status updated successfully"),n.NextResponse.json({success:!0,message:"Application status updated successfully",application:g})}catch(e){return console.error("Error updating application status:",e),n.NextResponse.json({error:"Internal server error"},{status:500})}}let f=new s.AppRouteRouteModule({definition:{kind:i.RouteKind.APP_ROUTE,page:"/api/applications/route",pathname:"/api/applications",filename:"route",bundlePath:"app/api/applications/route"},resolvedPagePath:"/Users/mattiebrooke/fieldjobs-website/app/api/applications/route.js",nextConfigOutput:"",userland:t}),{workAsyncStorage:m,workUnitAsyncStorage:y,serverHooks:j}=f;function x(){return(0,a.patchFetch)({workAsyncStorage:m,workUnitAsyncStorage:y})}},55511:e=>{"use strict";e.exports=require("crypto")},55591:e=>{"use strict";e.exports=require("https")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},74075:e=>{"use strict";e.exports=require("zlib")},78335:()=>{},79428:e=>{"use strict";e.exports=require("buffer")},79551:e=>{"use strict";e.exports=require("url")},81630:e=>{"use strict";e.exports=require("http")},91645:e=>{"use strict";e.exports=require("net")},94735:e=>{"use strict";e.exports=require("events")},96487:()=>{}};var r=require("../../../webpack-runtime.js");r.C(e);var o=e=>r(r.s=e),t=r.X(0,[4243,131,2190],()=>o(48479));module.exports=t})();