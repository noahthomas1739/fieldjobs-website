(()=>{var e={};e.id=9889,e.ids=[9889],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},9270:(e,t,r)=>{"use strict";r.r(t),r.d(t,{patchFetch:()=>j,routeModule:()=>D,serverHooks:()=>q,workAsyncStorage:()=>x,workUnitAsyncStorage:()=>$});var s={};r.r(s),r.d(s,{POST:()=>g});var i=r(96559),o=r(48088),a=r(37719),n=r(32190),c=r(97877),u=r(61223),l=r(44999);let d=new c.A(process.env.STRIPE_SECRET_KEY||"sk_test_placeholder");function p(e){try{if(null==e)return null;let t=new Date(1e3*e);if(isNaN(t.getTime()))return null;return t.toISOString()}catch(e){return null}}async function g(e){try{let t=(0,l.UL)();(0,u.createRouteHandlerClient)({cookies:()=>t});let{action:r,userId:s,newPriceId:i,newPlanType:o,subscriptionId:a}=await e.json();if(console.log("\uD83D\uDD27 Managing subscription:",{action:r,userId:s,newPriceId:i,newPlanType:o,subscriptionId:a}),!s)return n.NextResponse.json({error:"User ID is required"},{status:400});let c=await _(s);if(!c)return n.NextResponse.json({error:"No valid subscription found",shouldCreateNew:!0,message:"Please create a new subscription to continue."},{status:404});switch(console.log("\uD83D\uDCCA Valid subscription found:",{id:c.id,stripeId:c.stripe_subscription_id,planType:c.plan_type,status:c.status}),r){case"upgrade_immediate":return await w(c,i,o);case"downgrade_end_cycle":return await m(c,i,o);case"cancel":return await h(c);case"reactivate":return await S(c);default:return n.NextResponse.json({error:"Invalid action"},{status:400})}}catch(e){return console.error("‚ùå Subscription management error:",e),n.NextResponse.json({error:"Subscription management failed",details:e.message,shouldCreateNew:e.message.includes("No such subscription")},{status:500})}}async function _(e){console.log("\uD83D\uDD0D Finding valid subscription for user:",e);let{data:t,error:r}=await supabase.from("subscriptions").select("*").eq("user_id",e).order("created_at",{ascending:!1});if(r)throw console.error("‚ùå Database error:",r),Error("Database query failed: "+r.message);if(!t||0===t.length)return console.log("‚ùå No subscriptions found in database"),null;for(let e of(console.log(`üìä Found ${t.length} subscription(s) in database:`),t.forEach((e,t)=>{console.log(`  ${t+1}. ID: ${e.id}, Stripe: ${e.stripe_subscription_id}, Status: ${e.status}, Plan: ${e.plan_type}`)}),t)){if(console.log(`
üîç Validating subscription ${e.id}:`),console.log(`  - Stripe ID: ${e.stripe_subscription_id}`),console.log(`  - DB Status: ${e.status}`),console.log(`  - Plan Type: ${e.plan_type}`),console.log(`  - Created: ${e.created_at}`),!e.stripe_subscription_id){console.log("‚ö†Ô∏è Skipping - no Stripe subscription ID");continue}try{console.log(`üîó Calling Stripe API for subscription: ${e.stripe_subscription_id}`);let t=await d.subscriptions.retrieve(e.stripe_subscription_id);console.log("‚úÖ Stripe API response successful:"),console.log(`  - Stripe Status: ${t.status}`),console.log(`  - Customer: ${t.customer}`);{let e=t.items?.data?.[0],r=p(e?.current_period_start),s=p(e?.current_period_end);console.log(`  - Current Period: ${r||"unknown"} to ${s||"unknown"}`)}console.log(`  - Items: ${t.items?.data?.length||0}`),await b(e,t);let r=["active","trialing","past_due","unpaid"];if(r.includes(t.status))return console.log("‚úÖ Found valid subscription with status:",t.status),{...e,stripeData:t};console.log(`‚ö†Ô∏è Subscription ${t.id} status "${t.status}" not in valid statuses: ${r.join(", ")}`)}catch(t){console.error(`‚ùå Stripe validation failed for ${e.stripe_subscription_id}:`),console.error(`  - Error Type: ${t.type}`),console.error(`  - Error Code: ${t.code}`),console.error(`  - Error Message: ${t.message}`),t.message.includes("No such subscription")&&(console.log(`üóëÔ∏è Marking subscription as invalid due to Stripe error`),await f(e.id));continue}}return console.log("‚ùå No valid active subscriptions found after checking all records"),null}async function b(e,t){let r=e.status,s=t.status;if(r!==s){console.log(`üîÑ Syncing status: DB="${r}" -> Stripe="${s}"`);let i={status:"canceled"===s?"cancelled":s,current_period_start:p(t.current_period_start),current_period_end:p(t.current_period_end),updated_at:new Date().toISOString()};"canceled"===s&&(t.canceled_at?i.cancelled_at=p(t.canceled_at)||new Date().toISOString():e.cancelled_at||(i.cancelled_at=new Date().toISOString()));let{error:o}=await supabase.from("subscriptions").update(i).eq("id",e.id);o?console.error("‚ö†Ô∏è Failed to sync status:",o):console.log("‚úÖ Status synced successfully")}}async function f(e){console.log(`üóëÔ∏è Marking subscription ${e} as invalid`);let{error:t}=await supabase.from("subscriptions").update({status:"cancelled",cancelled_at:new Date().toISOString(),updated_at:new Date().toISOString()}).eq("id",e);t?console.error("‚ö†Ô∏è Failed to mark as invalid:",t):console.log("‚úÖ Marked subscription as cancelled (invalid)")}async function w(e,t,r){try{console.log("‚¨ÜÔ∏è Starting immediate upgrade...");let s=e.stripeData;if(!["active","trialing"].includes(s.status))throw Error(`Cannot upgrade ${s.status} subscription`);if(!s.items?.data?.[0])throw Error("No subscription items found");if(!t||!r)throw Error("Missing price ID or plan type");console.log("\uD83D\uDCB0 Updating Stripe subscription...");let i=await d.subscriptions.update(s.id,{items:[{id:s.items.data[0].id,price:t}],proration_behavior:"create_prorations",billing_cycle_anchor:"unchanged"});console.log("‚úÖ Stripe subscription updated successfully");let o=v(r),{error:a}=await supabase.from("subscriptions").update({plan_type:o.planType,price:o.price,active_jobs_limit:o.jobLimit,credits:o.credits,current_period_start:p(i.current_period_start),current_period_end:p(i.current_period_end),status:"active",cancelled_at:null,updated_at:new Date().toISOString()}).eq("id",e.id);if(a)throw console.error("‚ùå Database update error:",a),Error("Database update failed: "+a.message);return await y(e.user_id,s.id),n.NextResponse.json({success:!0,message:`Successfully upgraded to ${o.planType} plan!`,newPlan:o})}catch(e){return console.error("‚ùå Upgrade error:",e),n.NextResponse.json({success:!1,error:"Upgrade failed",details:e.message},{status:500})}}async function m(e,t,r){try{console.log("‚¨áÔ∏è Starting end-cycle downgrade...");let t=e.stripeData;if(!["active","trialing"].includes(t.status))throw Error(`Cannot downgrade ${t.status} subscription`);let{data:s}=await supabase.from("subscription_schedule_changes").select("*").eq("user_id",e.user_id).eq("status","scheduled").single();if(s)return n.NextResponse.json({success:!1,error:"Downgrade already scheduled",message:`You already have a scheduled downgrade to ${s.new_plan} plan.`},{status:400});let i=v(r);console.log("\uD83D\uDC1B DEBUG stripeSubscription.current_period_end:",t.current_period_end),console.log("\uD83D\uDC1B DEBUG stripeSubscription.items.data[0]?.current_period_end:",t.items?.data?.[0]?.current_period_end);let o=t.current_period_end||t.items?.data?.[0]?.current_period_end;console.log("\uD83D\uDC1B DEBUG final periodEnd value:",o);let a=p(o);if(console.log("\uD83D\uDC1B DEBUG effectiveDate after conversion:",a),!a&&o){console.log("\uD83D\uDD27 Trying direct Date conversion as fallback...");try{let t=new Date(1e3*o).toISOString();console.log("\uD83D\uDD27 Fallback conversion successful:",t);let{error:r}=await supabase.from("subscription_schedule_changes").insert({user_id:e.user_id,subscription_id:e.id,stripe_schedule_id:`manual_${Date.now()}`,current_plan:e.plan_type,new_plan:i.planType,effective_date:t,status:"scheduled"});if(r)throw console.error("‚ùå Schedule error:",r),Error("Failed to schedule downgrade: "+r.message);return n.NextResponse.json({success:!0,message:`Downgrade scheduled to ${i.planType} plan! Your current benefits continue until ${new Date(t).toLocaleDateString()}.`,effectiveDate:t,newPlan:i})}catch(e){throw console.error("‚ùå Fallback conversion also failed:",e),Error("Unable to determine billing period end date from Stripe. Please contact support.")}}if(!a)throw Error("Unable to determine billing period end date from Stripe. Please contact support.");let{error:c}=await supabase.from("subscription_schedule_changes").insert({user_id:e.user_id,subscription_id:e.id,stripe_schedule_id:`manual_${Date.now()}`,current_plan:e.plan_type,new_plan:i.planType,effective_date:a,status:"scheduled"});if(c)throw console.error("‚ùå Schedule error:",c),Error("Failed to schedule downgrade: "+c.message);return n.NextResponse.json({success:!0,message:`Downgrade scheduled to ${i.planType} plan! Your current benefits continue until ${a?new Date(a).toLocaleDateString():"the end of your current period"}.`,effectiveDate:a,newPlan:i})}catch(e){return console.error("‚ùå Downgrade error:",e),n.NextResponse.json({success:!1,error:"Downgrade scheduling failed",details:e.message},{status:500})}}async function h(e){try{console.log("‚ùå Cancelling subscription...");let t=e.stripeData,r=await d.subscriptions.update(t.id,{cancel_at_period_end:!0}),{error:s}=await supabase.from("subscriptions").update({status:"cancelled",cancelled_at:new Date().toISOString(),updated_at:new Date().toISOString()}).eq("id",e.id);if(s)throw Error("Database update failed: "+s.message);return n.NextResponse.json({success:!0,message:"Subscription will cancel at the end of your billing period",cancelAt:p(r.current_period_end)})}catch(e){return console.error("‚ùå Cancel error:",e),n.NextResponse.json({success:!1,error:"Cancellation failed",details:e.message},{status:500})}}async function S(e){try{console.log("\uD83D\uDD04 Reactivating subscription...");let t=e.stripeData;await d.subscriptions.update(t.id,{cancel_at_period_end:!1});let{error:r}=await supabase.from("subscriptions").update({status:"active",cancelled_at:null,updated_at:new Date().toISOString()}).eq("id",e.id);if(r)throw Error("Database update failed: "+r.message);return n.NextResponse.json({success:!0,message:"Subscription reactivated successfully"})}catch(e){return console.error("‚ùå Reactivate error:",e),n.NextResponse.json({success:!1,error:"Reactivation failed",details:e.message},{status:500})}}async function y(e,t){console.log("\uD83E\uDDF9 Cleaning up old subscriptions...");let{error:r}=await supabase.from("subscriptions").update({status:"replaced",cancelled_at:new Date().toISOString(),updated_at:new Date().toISOString()}).eq("user_id",e).neq("stripe_subscription_id",t).in("status",["active","trialing"]);r?console.error("‚ö†Ô∏è Cleanup error:",r):console.log("‚úÖ Old subscriptions cleaned up")}function v(e){let t={starter:{planType:"starter",price:19900,jobLimit:3,credits:0},growth:{planType:"growth",price:29900,jobLimit:6,credits:5},professional:{planType:"professional",price:59900,jobLimit:15,credits:25},enterprise:{planType:"enterprise",price:199900,jobLimit:999999,credits:100}};return t[e]||t.starter}let D=new i.AppRouteRouteModule({definition:{kind:o.RouteKind.APP_ROUTE,page:"/api/stripe/manage-subscription/route",pathname:"/api/stripe/manage-subscription",filename:"route",bundlePath:"app/api/stripe/manage-subscription/route"},resolvedPagePath:"/Users/mattiebrooke/fieldjobs-website/app/api/stripe/manage-subscription/route.js",nextConfigOutput:"",userland:s}),{workAsyncStorage:x,workUnitAsyncStorage:$,serverHooks:q}=D;function j(){return(0,a.patchFetch)({workAsyncStorage:x,workUnitAsyncStorage:$})}},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},11997:e=>{"use strict";e.exports=require("punycode")},27910:e=>{"use strict";e.exports=require("stream")},28354:e=>{"use strict";e.exports=require("util")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},34631:e=>{"use strict";e.exports=require("tls")},39727:()=>{},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},47990:()=>{},55511:e=>{"use strict";e.exports=require("crypto")},55591:e=>{"use strict";e.exports=require("https")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},74075:e=>{"use strict";e.exports=require("zlib")},78335:()=>{},79428:e=>{"use strict";e.exports=require("buffer")},79551:e=>{"use strict";e.exports=require("url")},79646:e=>{"use strict";e.exports=require("child_process")},81630:e=>{"use strict";e.exports=require("http")},91645:e=>{"use strict";e.exports=require("net")},94735:e=>{"use strict";e.exports=require("events")},96487:()=>{}};var t=require("../../../../webpack-runtime.js");t.C(e);var r=e=>t(t.s=e),s=t.X(0,[4243,131,2190,1330,7877],()=>r(9270));module.exports=s})();